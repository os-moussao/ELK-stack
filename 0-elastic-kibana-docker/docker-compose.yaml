name: elk

services:
  setup:
    container_name: setup
    image: docker.elastic.co/elasticsearch/elasticsearch:$STACK_VERSION
    user: "0"
    env_file:
      - .env
    volumes:
      - ./setup/script.sh:/usr/share/elasticsearch/script.sh
      - ./setup/instances.yml:/usr/share/elasticsearch/config/certs/instances.yml
      - certs:/usr/share/elasticsearch/config/certs
    command: sh script.sh
    healthcheck:
      test: [ "CMD-SHELL", "[ -f config/certs/ca.zip ] && [ -f config/certs/certs.zip ]" ]
      interval: 2s
      timeout: 100ms
      retries: 50
      start_period: 0s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$STACK_VERSION
    container_name: elasticsearch
    depends_on:
      setup:
        condition: service_healthy
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      node.name: dev-node
      cluster.name: dev-cluster
      discovery.type: single-node
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      bootstrap.memory_lock: true # perf: allow memory locking to prevent memory swaping
      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.key: certs/elasticsearch/elasticsearch.key
      xpack.security.http.ssl.certificate: certs/elasticsearch/elasticsearch.crt
      xpack.security.http.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.key: certs/elasticsearch/elasticsearch.key
      xpack.security.transport.ssl.certificate: certs/elasticsearch/elasticsearch.crt
      xpack.security.transport.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.license.self_generated.type: basic
      xpack.ml.use_auto_machine_memory_percent: true
    mem_limit: 1G
    ulimits:
      # perf: allow unlimited memlock for optimal performance preventing elasticsearch from swaping memory as possible
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9200 || exit 1" ]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 20s

  kibana:
    image: docker.elastic.co/kibana/kibana:$STACK_VERSION
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana-data:/usr/share/kibana/data
    ports:
      - 5601:5601
    environment:
      SERVERNAME: kibana
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: $KIBANA_PASSWORD
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: config/certs/ca/ca.crt
    mem_limit: 1G
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:5601 > /dev/null || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 20s

volumes:
  certs: {}
  elastic-data: {}
  kibana-data: {}
